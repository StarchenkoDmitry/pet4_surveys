generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  id        String   @id @default(uuid())
  ceatedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt()

  name    String?
  surname String?

  tokens    AccessToken[]
  providers GithubProvider[]
  templates SurveyTemplate[]
}


model AccessToken{
  id        String   @id @default(uuid())
  ceatedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt()

  accessToken String @unique
  expiresIn   DateTime 

  userId String
  user User @relation(fields: [userId],references: [id])
}


model GithubProvider{
  id        String   @id @default(uuid())
  ceatedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt()

  //github profile data here
  accountId String @unique
  name      String?
  login     String?
  email     String?
  avatarUrl String?

  userId String
  user User @relation(fields: [userId],references: [id])
}



model SurveyTemplate{
  id        String   @id @default(uuid())
  ceatedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt()

  title             String
  questionTemplates QuestionTemplate[]

  userId String
  user User @relation(fields: [userId],references: [id])
}

model QuestionTemplate{
  id        String   @id @default(uuid())
  ceatedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt()
  
  title         String
  choiceOptiony ChoiceOptiony  
  varinats      VariantTemplate[]

  qurveyTemplateId String
  qurveyTemplate SurveyTemplate @relation(fields: [qurveyTemplateId],references: [id])
}

enum ChoiceOptiony{
  one
  many
}

model VariantTemplate{
  id        String   @id @default(uuid())
  ceatedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt()

  text    String
  message String?

  questionTemplateId String
  questionTemplate QuestionTemplate @relation(fields: [questionTemplateId],references: [id])
}
